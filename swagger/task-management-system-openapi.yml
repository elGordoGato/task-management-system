openapi: 3.0.1

info:
  title: Task Management System OpenAPI
  description: "Documentation \"Task Management System API v1.0\""
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Authentication
    description: "Публичный API для аутентификации"
  - name: Tasks
    description: "Закрытый API для работы с задачами"
  - name: Comments
    description: "Закрытый API для работы с комментариями к задачам"
  - name: Users
    description: "Закрытый API для работы с зарегистрированными пользователями"
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      operationId: register
      summary: "Регистрация нового пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /auth/login:
    post:
      tags:
        - Authentication
      operationId: authenticate
      summary: "Вход существующего пользователя в систему"
      description: "В ответе приходит JWN токен и срок его действия"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /tasks:
    get:
      tags:
        - Tasks
      operationId: getTasks
      summary: "Получение страницы со списком задач по заданным параметрам"
      security:
        - bearerAuth: []
      parameters:
        - name: title
          in: query
          required: false
          schema:
            maxLength: 200
            minLength: 1
            type: string
        - name: description
          in: query
          required: false
          schema:
            maxLength: 2000
            minLength: 1
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - IN_PROGRESS
              - COMPLETED
        - name: priority
          in: query
          required: false
          schema:
            type: string
            enum:
              - LOW
              - MODERATE
              - HIGH
        - name: creatorId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: executorId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: hasComments
          in: query
          required: false
          schema:
            type: boolean
        - name: sortParam
          in: query
          required: false
          schema:
            type: string
            default: CREATED
            enum:
              - CREATED
              - UPDATED
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: pageNumber
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    post:
      tags:
        - Tasks
      operationId: create
      summary: "Создание новой задачи"
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTaskDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    patch:
      tags:
        - Tasks
      operationId: update
      summary: "Редактирования существующей задачи"
      description: "Полный доступ есть только у создателя, исполнитель может менять статус задачи"
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTaskDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /tasks/{taskId}/comment:
    post:
      tags:
        - Comments
      operationId: create_1
      summary: "Создание нового комментария к задаче"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    patch:
      tags:
        - Comments
      operationId: update_1
      summary: "Редактирование текста существующего комментария"
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /users:
    get:
      tags:
        - Users
      operationId: allUsers
      summary: "Получение страницы со списком айди и имен всех пользователей"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUserIdNameDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /users/me:
    get:
      tags:
        - Users
      operationId: authenticatedUser
      summary: "Получение всей информации об авторизованном пользователе"
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /tasks/{taskId}:
    delete:
      tags:
        - Tasks
      operationId: delete
      summary: "Удаление задачи по ее айди, только создателем"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /tasks/{taskId}/comment/{commentId}:
    delete:
      tags:
        - Comments
      operationId: delete_1
      summary: "Удаление комментария к задаче по айди, только автором комментария"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemDetail'
components:
  securitySchemes:
    bearerAuth:
      description: "JWT token to authorize requests. 
      You can get it in response body after login in field \"token\"."
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
    CommentDto:
      required:
        - id
        - text
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          maxLength: 2000
          minLength: 0
          type: string
        authorId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    TaskDto:
      required:
        - executorId
        - id
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          maxLength: 200
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - COMPLETED
        priority:
          type: string
          enum:
            - LOW
            - MODERATE
            - HIGH
        creatorId:
          type: integer
          format: int64
        executorId:
          type: integer
          format: int64
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    InputTaskDto:
      required:
        - executorId
        - id
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          maxLength: 200
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - COMPLETED
        priority:
          type: string
          enum:
            - LOW
            - MODERATE
            - HIGH
        executorId:
          type: integer
          format: int64
    UserDto:
      required:
        - email
        - fullName
        - password
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          maxLength: 100
          minLength: 0
          type: string
        password:
          maxLength: 100
          minLength: 6
          type: string
        fullName:
          maxLength: 100
          minLength: 2
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          format: int64
    PageUserIdNameDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserIdNameDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        unpaged:
          type: boolean
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        unsorted:
          type: boolean
        empty:
          type: boolean
        sorted:
          type: boolean
    UserIdNameDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fullName:
          type: string
    PageTaskDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TaskDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
